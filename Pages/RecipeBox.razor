@using MudBlazor
@using System.Reflection
@using GEMS.GAGE.Models.CorrUltima

@*Dialog box that displays a text box and a list of options. Writing a string in the text box and choosing the relevant
    options would make a custom option
*@
<MudDialog>
    <DialogContent>
        <MudContainer Label="Optimization Matrix" MaxWidth="MaxWidth.Small">
            <MudPaper Class="pa-16 ma-2" Color="Lighten1" Label="Optimization Matrix" Outlined="true" Square="true">
                <MudTextField oninput="@TextValueChanged" @bind-Value="@TextValue" Label="Name" Variant="Variant.Filled"></MudTextField>

                @*This component would have all the properties that are available in the current context*@
                <AllComponents @bind-Selected="RecievedItems"></AllComponents>

                @if(RecievedItems.ContainsKey("Option1"))
                {
                    <h6>@RecievedItems["Option1"]</h6>
                }

        </MudPaper>
</MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private MatrixRecipe choices = new MatrixRecipe();

    bool init = false;

    [Parameter]
    public string TextValue { get; set; }

    [Parameter]
    public Dictionary<string, string>? RecievedItems { get; set; }
    
    protected override void OnInitialized()
    {
        RecievedItems = new Dictionary<string, string>();
        base.OnInitialized();
    }

    // Gets the value of the text entered in the text box
    public void TextValueChanged(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        TextValue = (string)args.Value;
    }

    // Dialog box contents
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit()
    {
        MudDialog.Close(new Tuple<DialogResult, string, Dictionary<string, string>>(DialogResult.Ok(true), TextValue, RecievedItems));
    }
    void Cancel() => MudDialog.Cancel();
}