@using MudBlazor
@inject IDialogService DialogService
@using GEMS.GAGE.Models.CorrUltima

<MudButton @onclick="OpenBox" Variant="Variant.Filled" Color="Color.Primary">Recipe</MudButton>

@code {

    [Parameter]
    public List<MatrixRecipe> Recipes { 
        get
        {
            return _recipes;
        }
        set
        {
            _recipes = value;
            
        }


    }
    private List<MatrixRecipe> _recipes;

    [Parameter]
    public EventCallback<List<MatrixRecipe>> RecipesChanged { get; set; }

    private async Task NotifyRecipesUpdated()
    {
        await RecipesChanged.InvokeAsync(Recipes);
    }

    // Getting the text in the text field present in the dialog box.
    private async Task OpenBox()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };

        var dialogParams = new DialogParameters();
        dialogParams.Add("Recipes", Recipes);

        // awaiting the result of Dialog Box being closed. Doesn't cause other tasks to halt.
        var dialogResult = await DialogService.Show<RecipeBox>("Simple Dialog", dialogParams, options).Result;
        if (dialogResult != null)
        {
            // If the data returned is a tuple, then this block is executed
            if (dialogResult.Data is Tuple<DialogResult, MatrixRecipe>)
            {

                // Storing the tuple in convData
                var convData = dialogResult.Data as Tuple<DialogResult, MatrixRecipe>;
                if(convData !=  null)
                {

                    Recipes.Add(convData.Item2);
                    NotifyRecipesUpdated();
                }
            }
        }

    }

}